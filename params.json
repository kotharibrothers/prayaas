{"name":"Prayaas","tagline":"Prayaas is the data-mining event for Technex'14, Indian Institute of Technology(BHU), Varanasi","body":"Prayaas, Technex'14, Indian Institute of Technology(BHU), Varanasi\r\n----------\r\n\r\n**Prayaas** is an event based on building database systems that can scale and handle *big data* using efficient methods. \r\n\r\nIn this implementation, **Python** is used with **SQLite3** providing high-speed querying and efficient, robust read and write operations.\r\n\r\nSQLite3 was chosen because of \r\n- its high scalability(high volume size upto 140TB!), \r\n- lowest querying times, \r\n- cross-platform compatibility,\r\n- compact size of the database\r\n- inbuilt Python support\r\n- and zero config headaches :)\r\n\r\nThe benchmarks for SQLite3 can be seen here:\r\n\r\n![BS Img]\r\n\r\nMore info on SQLite @ <http://sqlite.org>\r\n\r\n\r\nVersion\r\n----------\r\n0.1\r\n\r\n\r\nSetup\r\n----------\r\n\r\nPut the domain-mapping.csv file and the raw text files containg data in the same directory before using.\r\n\r\nA install script is provided with this package. Open a terminal session and type:\r\n```\r\nchmod +x install.sh\r\n./install.sh\r\n\r\n```\r\n\r\nAfter that a prayaas.db file is created.\r\nDo the following:\r\n\r\n```\r\npython write.py #for setting up the sqlite3 database\r\n\r\n```\r\nThe above script will  load up the database required for querying and  will display time of setup on exit.\r\nIt will also count on execution of every million of line in the text file.\r\nAfter that for querying use the following command in the current directory:\r\n```\r\nsqlite3 prayaas.db\r\n\r\n```\r\nA  sqlite3 prompt will appear and you can execute your raw sql queries.\r\n\r\nDatabase Structure\r\n----------\r\n\r\nThe event problem statement provided 4 raw, text files (each upto 1GB in size). The text files contained ***tab-delimited*** MSN user data in the form of:\r\n\r\n- userID, \r\n- userType(Machine or Human), \r\n- age, \r\n- gender(Unknown, Male, Female), \r\n- country, \r\n- domain seaches \r\n- and specific search keywords.\r\n- domain names corresponding to index numbers given to them\r\n\r\nHere separate tables were created for user_info, domain mapping and search queries. Each table contained a foreignkey related the specific data in relation to userID (aliased with ROWID of SQLite). \r\n\r\n\r\nUsage\r\n----------\r\n\r\nHere are some of the sample queries you can do at the SQLite shell:\r\n```\r\n$ sqlite> select rowid from user_info where (gender = 'M') and ( age between 25 and 35 ) and (msnvisits > 0) and (geocountry = 'US');\r\n\r\n$ sqlite> select query_string from queries where q_id in ( select rowid from user_info where (gender = 'M') and ( age between 25 and 35 ) and (msnvisits > 0) and (geocountry = 'US'));\r\n\r\n```\r\n\r\nFor simple queries, use the query module provided. \r\n\r\nContributors\r\n----------\r\n\r\n[Viyat Bhalodia](https://github.com/delta24)\r\n\r\n[Ankush Sharma](https://github.com/black_perl)\r\n\r\n\r\nTODO\r\n----------\r\n\r\nFuture versions will see the use of the ***pandas*** library for data analysis, efficient algorithms for data crunching, and support for ***regex*** matching and searching.\r\n\r\n\r\nContributions\r\n----------\r\n\r\nSubmit bug reports @ [GitHub Issue Tracker](https://github.com/delta24/prayaas/issues)\r\n\r\nSend us a pull request! \r\n\r\n[BS Img]: http://i.imgur.com/gPCCdLF.png\r\n","google":"UA-49529910-1","note":"Don't delete this file! It's used internally to help with page regeneration."}